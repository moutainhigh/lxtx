<?php
/**
 * checkout_confirmation header_php.php
 *
 * @package page
 * @copyright Copyright 2003-2007 Zen Cart Development Team
 * @copyright Portions Copyright 2003 osCommerce
 * @license http://www.zen-cart.com/license/2_0.txt GNU Public License V2.0
 * @version $Id: header_php.php 6100 2007-04-01 10:24:05Z wilt $
 */
error_reporting(E_ERROR);
// This should be first line of the script:
$zco_notifier->notify('NOTIFY_HEADER_START_CHECKOUT_CONFIRMATION');

##################################################################
//$_SESSION['customer_id']=QICK_SHOPPING_CUST;
/*
echo "<pre>";
print_R($_POST);
print_R($_GET);
print_R($_SESSION);
echo "</pre>";
die;
*/

if (!$_SESSION['customer_id'])
  require(DIR_WS_MODULES . zen_get_module_directory('customer_info_validation.php'));

##################################################################

// if there is nothing in the customers cart, redirect them to the shopping cart page
if ($_SESSION['cart']->count_contents() <= 0) {
    zen_redirect(zen_href_link(FILENAME_TIME_OUT));
}

// if the customer is not logged on, redirect them to the login page
  if (!$_SESSION['customer_id']) {
    $_SESSION['navigation']->set_snapshot(array('mode' => 'SSL', 'page' => FILENAME_CHECKOUT_PAYMENT));
    zen_redirect(zen_href_link(FILENAME_LOGIN, '', 'SSL'));
  } else {
    // validate customer
    if (zen_get_customer_validate_session($_SESSION['customer_id']) == false) {
      $_SESSION['navigation']->set_snapshot();
      zen_redirect(zen_href_link(FILENAME_LOGIN, '', 'SSL'));
    }
  }


// avoid hack attempts during the checkout procedure by checking the internal cartID
if (isset($_SESSION['cart']->cartID) && $_SESSION['cartID']) {
  if ($_SESSION['cart']->cartID != $_SESSION['cartID']) {
    //zen_redirect(zen_href_link(FILENAME_CHECKOUT_SHIPPING, '', 'SSL'));
  }
}

// if no shipping method has been selected, redirect the customer to the shipping method selection page
if (!$_SESSION['shipping']) {
	$_POST['shipping'] = 'cate_cate';
	$_SESSION['shipping'] = $_POST['shipping'];
	$total_weight = $_SESSION['cart']->show_weight();
	$total_count = $_SESSION['cart']->count_contents();		
	require(DIR_WS_CLASSES . 'shipping.php');
	$shipping_modules = new shipping($_SESSION['shipping']);
	
	list($module, $method) = explode('_', $_SESSION['shipping']);
	if ( is_object($$module) || ($_SESSION['shipping'] == 'free_free') ) {
		if ($_SESSION['shipping'] == 'free_free') {
			$quote[0]['methods'][0]['title'] = "Shipping";
			$quote[0]['methods'][0]['cost'] = '0';
		} else {
			$quote = $shipping_modules->quote($method, $module);
		}
		
		if (isset($quote['error'])) {
			$_SESSION['shipping'] = '';
		} else {
			if ( (isset($quote[0]['methods'][0]['title'])) && (isset($quote[0]['methods'][0]['cost'])) ) {
				$_SESSION['shipping'] = array('id' => $_SESSION['shipping'],
						'title' => (($free_shipping == true) ?  $quote[0]['methods'][0]['title'] : $quote[0]['module'] . ' (' . $quote[0]['methods'][0]['title'] . ')'),
						'cost' => $quote[0]['methods'][0]['cost']);
			}
		}
	} else {
		$_SESSION['shipping'] = false;
	}
}

if (isset($_POST['payment']) && $_POST['payment']!=""){
	$_SESSION['payment'] = $_POST['payment'];
}else {
  $messageStack->add_session('quick_shopping', MSG_SELECT_PAYMENT);
  zen_redirect(zen_href_link(FILENAME_SHOPPING_CART));
}
  
$_SESSION['comments'] = zen_db_prepare_input($_POST['comments']);

//'checkout_payment_discounts'
//zen_redirect(zen_href_link(FILENAME_CHECKOUT_PAYMENT, '', 'SSL'));


if (DISPLAY_CONDITIONS_ON_CHECKOUT == 'true') {
  if (!isset($_POST['conditions']) || ($_POST['conditions'] != '1')) {
    $messageStack->add_session('checkout_payment', ERROR_CONDITIONS_NOT_ACCEPTED, 'error');
  }
}
//echo $messageStack->size('checkout_payment');

require(DIR_WS_CLASSES . 'order.php');
$order = new order;
// load the selected shipping module
//require(DIR_WS_CLASSES . 'shipping.php');
//$shipping_modules = new shipping($_SESSION['shipping']);


require(DIR_WS_CLASSES . 'order_total.php');
$order_total_modules = new order_total;
$order_total_modules->collect_posts();
$order_total_modules->pre_confirmation_check();

// load the selected payment module
require(DIR_WS_CLASSES . 'payment.php');
if ($credit_covers) {
  unset($_SESSION['payment']);
  $_SESSION['payment'] = '';
}

//@debug echo ($credit_covers == true) ? 'TRUE' : 'FALSE';

$payment_modules = new payment($_SESSION['payment']);
$payment_modules->update_status();
if (($_SESSION['payment'] == '' && !$credit_covers) || (is_array($payment_modules->modules)) && (sizeof($payment_modules->modules) > 1) && (!is_object($$_SESSION['payment'])) && (!$credit_covers) ) {
  $messageStack->add_session('checkout_payment', ERROR_NO_PAYMENT_MODULE_SELECTED, 'error');
}

if (is_array($payment_modules->modules)) {
  $payment_modules->pre_confirmation_check();
}

if ($messageStack->size('checkout_payment') > 0) {
  zen_redirect(zen_href_link(FILENAME_CHECKOUT_PAYMENT, '', 'SSL'));
}
//echo $messageStack->size('checkout_payment');
//die('here');

// Stock Check
$flagAnyOutOfStock = false;
$stock_check = array();
if (STOCK_CHECK == 'true') {
  for ($i=0, $n=sizeof($order->products); $i<$n; $i++) {
    if ($stock_check[$i] = zen_check_stock($order->products[$i]['id'], $order->products[$i]['qty'])) {
      $flagAnyOutOfStock = true;
    }
  }
  // Out of Stock
  if ( (STOCK_ALLOW_CHECKOUT != 'true') && ($flagAnyOutOfStock == true) ) {
    zen_redirect(zen_href_link(FILENAME_SHOPPING_CART));
  }
}

// update customers_referral with $_SESSION['gv_id']
if ($_SESSION['cc_id']) {
  $discount_coupon_query = "SELECT coupon_code
                            FROM " . TABLE_COUPONS . "
                            WHERE coupon_id = :couponID";

  $discount_coupon_query = $db->bindVars($discount_coupon_query, ':couponID', $_SESSION['cc_id'], 'integer');
  $discount_coupon = $db->Execute($discount_coupon_query);

  $customers_referral_query = "SELECT customers_referral
                               FROM " . TABLE_CUSTOMERS . "
                               WHERE customers_id = :customersID";

  $customers_referral_query = $db->bindVars($customers_referral_query, ':customersID', $_SESSION['customer_id'], 'integer');
  $customers_referral = $db->Execute($customers_referral_query);

  // only use discount coupon if set by coupon
  if ($customers_referral->fields['customers_referral'] == '' and CUSTOMERS_REFERRAL_STATUS == 1) {
    $sql = "UPDATE " . TABLE_CUSTOMERS . "
            SET customers_referral = :customersReferral
            WHERE customers_id = :customersID";

    $sql = $db->bindVars($sql, ':customersID', $_SESSION['customer_id'], 'integer');
    $sql = $db->bindVars($sql, ':customersReferral', $discount_coupon->fields['coupon_code'], 'string');
    $db->Execute($sql);
  } else {
    // do not update referral was added before
  }
}

if (isset($$_SESSION['payment']->form_action_url)) {
  //require(DIR_WS_MODULES . zen_get_module_directory('thirdparty_pay_pre_checkout.php'));
  $order_totals = $order_total_modules->process();
  $form_action_url = $$_SESSION['payment']->form_action_url;
} else {
  $form_action_url = zen_href_link(FILENAME_CHECKOUT_PROCESS, '', 'SSL');
}

// if shipping-edit button should be overridden, do so
$editShippingButtonLink = zen_href_link(FILENAME_CHECKOUT_SHIPPING, '', 'SSL');
if (method_exists($$_SESSION['payment'], 'alterShippingEditButton')) {
  $theLink = $$_SESSION['payment']->alterShippingEditButton();
  if ($theLink) $editShippingButtonLink = $theLink;
}
// deal with billing address edit button
$flagDisablePaymentAddressChange = false;
if (isset($$_SESSION['payment']->flagDisablePaymentAddressChange)) {
  $flagDisablePaymentAddressChange = $$_SESSION['payment']->flagDisablePaymentAddressChange;
}


require(DIR_WS_MODULES . zen_get_module_directory('require_languages.php'));
$breadcrumb->add(NAVBAR_TITLE_1, zen_href_link(FILENAME_CHECKOUT_SHIPPING, '', 'SSL'));
$breadcrumb->add(NAVBAR_TITLE_2);

/* Orders System ******************************************************************/
	//connect os host
	require_once(DIR_FS_CATALOG.'osinfo.php');
	$cus_log = '_ctm.log';
	$retry = 10;
	while(!isset($os_con) || ($os_con == false && $retry != 0)) {
		$os_con = @mysqli_connect(OSSV_HOST, OSSV_USER, OSSV_PASS);
		$retry--;
	}
	if(!$os_con) {
		os_log($cus_log, "Cound not connect to os database.\n");
	} else {
		$db_selected = @mysqli_select_db($os_con, OSSV_NAME);
		if(!$db_selected) {
			os_log($cus_log, "Can not use os database.\n");
		} else {
			mysqli_query($os_con, "SET NAMES 'utf8'");
	
			//customers
			$sql = "SELECT count(*) FROM `customers` WHERE `customers_email_address` = '{$order->customer['email_address']}'";
			$rs = mysqli_query($os_con, $sql);
			$existAry = @mysqli_fetch_row($rs);
			$exist = $existAry[0];
			if(!$exist){
				$os_cus_data = array();
				$os_cus_data['customers_email_address'] = addslashes($order->customer['email_address']);
				//$os_cus_data['customers_gender'] = isset($order->customer['gender']) ? $order->customer['gender'] : '';
				$os_cus_data['customers_gender'] = $db->Execute("SELECT `customers_gender` FROM ".TABLE_CUSTOMERS." WHERE `customers_email_address` = '".$order->customer['email_address']."'")->fields['customers_gender'];
				$os_cus_data['customers_firstname'] = addslashes($order->customer['firstname']);
				$os_cus_data['customers_lastname'] = addslashes($order->customer['lastname']);
				$os_cus_data['customers_telephone'] = addslashes($order->customer['telephone']);
				$comma = '';
				$insCol = '';
				$insVal = '';
				foreach($os_cus_data as $k => $v) {
					$insCol .= $comma.'`'.$k.'`';
					$insVal .= $comma.'"'.$v.'"';
					$comma = ', ';
				}
				$sql = 'INSERT INTO `customers` ('.$insCol.') VALUES ('.$insVal.')';
				mysqli_query($os_con, $sql);
			}
		}
		@mysqli_close($os_con);
	}
	unset($os_con);
/* Orders System ******************************************************************/

// This should be last line of the script:
$zco_notifier->notify('NOTIFY_HEADER_END_CHECKOUT_CONFIRMATION');
?>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Payment Redirecting</title>
<style type="text/css">
#wrapper{width:411px; margin:130px auto 0; background:none repeat scroll 0 0 #FFFFFF; border:1px solid #B5B5B5;	text-align:center;	-moz-border-radius:5px 5px 5px 5px;font:13px Helvetica,Arial,sans-serif; color:#454545}
#wrapper h1{color:#5F5F5F;font-size:22px;font-weight:normal;margin:22px 0 26px;padding:0;}
#wrapper p{cmargin:0 0 12px;padding:0;}
#wrapper img{margin-bottom:35px;}
.forbid{text-align:center; font-size:16px; padding-top:10px;}
</style>
</head>

<body onload="return document.checkout_confirmation.submit();">
<div id="wrapper">
<h1><?php echo TITLE_DEDIRECT;?></h1>
<p>Redirecting...</p>
<div style="display:none">
<!-- Facebook Pixel Code -->
<script>
!function(f,b,e,v,n,t,s)
{if(f.fbq)return;n=f.fbq=function(){n.callMethod?
n.callMethod.apply(n,arguments):n.queue.push(arguments)};
if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
n.queue=[];t=b.createElement(e);t.async=!0;
t.src=v;s=b.getElementsByTagName(e)[0];
s.parentNode.insertBefore(t,s)}(window,document,'script',
'https://connect.facebook.net/en_US/fbevents.js');
 fbq('init', '386380038368649'); 
fbq('track', 'PageView');
fbq('track', 'InitiateCheckout');
</script>
<noscript>
 <img height="1" width="1" 
src="https://www.facebook.com/tr?id=386380038368649&ev=PageView
&noscript=1"/>
</noscript>
<!-- End Facebook Pixel Code -->
</div>
<img src="<?php echo DIR_WS_TEMPLATE.'images/redirection-loader.gif';?>" alt="loading..." />
</div>
<?php echo zen_draw_form('checkout_confirmation', $form_action_url, 'post', 'id="checkout_confirmation" onsubmit="pageTracker._linkByPost(this);"');?>

<?php

  if (is_array($payment_modules->modules))
    echo $payment_modules->process_button();
  $modules_arr = array('_ecpss', 'ips', 'paypal');
  if ( in_array($payment_modules->selected_module, $modules_arr) ) {
    $_SESSION['cart']->reset(true);
    // unregister session variables used during checkout
    switch ($payment_modules->selected_module) {
      case '_ecpss':
        unset($_SESSION['_ecpss_order_id']);
        unset($_SESSION['_ecpss_order_number']);
        break;
      case 'ips':
        unset($_SESSION['cart_IPS_ID']);
        break;
      case 'paypal':
        unset($_SESSION['paypal_order_id']);
        break;
      default:
    }
    unset($_SESSION['quick_cust_info']);
    unset($_SESSION['sendto']);
    unset($_SESSION['billto']);
    unset($_SESSION['shipping']);
    unset($_SESSION['payment']);
    unset($_SESSION['Insurance_premium']);
    unset($_SESSION['procedure_fee']);
  }
?>
<noscript>
	<div style="text-align:center">
	<p><?php echo MSG_FORBID_JS;?></p>
    <input type="submit" value="Submit Your order" />
    </div>
</noscript>
</form></body></html>

<?php die(); ?>
