<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lxtx.dao.CloudChnBackCommissionMapper">
	<resultMap id="BaseResultMap" type="com.lxtx.model.CloudChnBackCommission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="chnno" property="chnno" jdbcType="VARCHAR" />
		<result column="commission" property="commission" jdbcType="DECIMAL" />
		<result column="user_count" property="userCount" jdbcType="INTEGER" />
		<result column="day" property="day" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, chnno, commission, user_count, `day`
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from cloud_chn_back_commission
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		cloud_chn_back_commission
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.lxtx.model.CloudChnBackCommission"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		cloud_chn_back_commission (chnno, commission, user_count,
		`day`)
		values
		(#{chnno,jdbcType=VARCHAR}, #{commission,jdbcType=DECIMAL},
		#{userCount,jdbcType=INTEGER},
		#{day,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.lxtx.model.CloudChnBackCommission"
		useGeneratedKeys="true" keyProperty="id">
		insert into cloud_chn_back_commission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			chnno,
			commission,
			user_count,
			`day`,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{chnno,jdbcType=VARCHAR},
			#{commission,jdbcType=DECIMAL},
			#{userCount,jdbcType=INTEGER},
			#{day,jdbcType=INTEGER},
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.lxtx.model.CloudChnBackCommission">
		update cloud_chn_back_commission
		<set>
			<if test="chnno != null">
				chnno = #{chnno,jdbcType=VARCHAR},
			</if>
			<if test="commission != null">
				commission = #{commission,jdbcType=DECIMAL},
			</if>
			<if test="userCount != null">
				user_count = #{userCount,jdbcType=INTEGER},
			</if>
			<if test="day != null">
				`day` = #{day,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lxtx.model.CloudChnBackCommission">
		update
		cloud_chn_back_commission
		set chnno = #{chnno,jdbcType=VARCHAR},
		commission = #{commission,jdbcType=DECIMAL},
		user_count =
		#{userCount,jdbcType=INTEGER},
		`day` = #{day,jdbcType=INTEGER}
		where id
		= #{id,jdbcType=INTEGER}
	</update>
	<select id="sumCommissionAndUcount" resultType="com.lxtx.model.CloudChnBackCommission"
		parameterType="java.lang.String">
		select a.chnno as chnno,IFNULL(b.user_count,0) as
		userCount,IFNULL(c.commission
		,0.00)as commission from cloud_chn_code
		a
		left join ( select chnno,count(1) as user_count from cloud_user where
		DATE_FORMAT(crt_tm,'%Y-%m-%d')=#{date,jdbcType=VARCHAR} group by chnno
		) b on
		a.chnno = b.chnno
		left join (select chnno,sum(commission-coupon_commission) as
		commission from cloud_order
		where
		DATE_FORMAT(clear_time,'%Y-%m-%d')=#{date,jdbcType=VARCHAR} and
		(`status`=2
		or `status` =3) group by chnno) c on a.chnno = c.chnno
	</select>
	<update id="updateByChnnoAndDate" parameterType="com.lxtx.model.CloudChnBackCommission">
		update
		cloud_chn_back_commission
		set chnno = #{chnno,jdbcType=VARCHAR},
		commission = #{commission,jdbcType=DECIMAL},
		user_count =
		#{userCount,jdbcType=INTEGER},
		`day` = #{day,jdbcType=INTEGER}
		where
		chnno
		= #{chnno,jdbcType=INTEGER}
		and `day` = #{day,jdbcType=INTEGER}
	</update>
</mapper>