<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lxtx.dao.CloudCouponMapper">
	<resultMap id="BaseResultMap" type="com.lxtx.model.CloudCoupon">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="coupon_type" property="couponType" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="add_time" property="addTime" jdbcType="DATE" />
		<result column="overdue_time" property="overdueTime" jdbcType="DATE" />
		<result column="order_id" property="orderId" jdbcType="INTEGER" />
		<result column="coupon_name" property="couponName" jdbcType="VARCHAR" />
		<result column="coupon_amount" property="couponAmount"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, `uid`, coupon_type, `status`, add_time, overdue_time, order_id,
		coupon_name,
		coupon_amount
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from cloud_coupon
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from cloud_coupon
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.lxtx.model.CloudCoupon"
		useGeneratedKeys="true" keyProperty="id">
		insert into cloud_coupon (`uid`, coupon_type, `status`,
		add_time, overdue_time, order_id,
		coupon_name, coupon_amount)
		values (#{uid,jdbcType=INTEGER}, #{couponType,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{addTime,jdbcType=DATE}, #{overdueTime,jdbcType=DATE}, #{orderId,jdbcType=INTEGER},
		#{couponName,jdbcType=VARCHAR}, #{couponAmount,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.lxtx.model.CloudCoupon"
		useGeneratedKeys="true" keyProperty="id">
		insert into cloud_coupon
		<trim prefix="(" suffix=")" suffixOverrides=",">
			`uid`,
			coupon_type,
			`status`,
			add_time,
			overdue_time,
			order_id,
			coupon_name,
			coupon_amount,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{uid,jdbcType=INTEGER},
			#{couponType,jdbcType=INTEGER},
			#{status,jdbcType=INTEGER},
			#{addTime,jdbcType=DATE},
			#{overdueTime,jdbcType=DATE},
			#{orderId,jdbcType=INTEGER},
			#{couponName,jdbcType=VARCHAR},
			#{couponAmount,jdbcType=INTEGER},
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.lxtx.model.CloudCoupon">
		update cloud_coupon
		<set>
			<if test="uid != null">
				`uid` = #{uid,jdbcType=INTEGER},
			</if>
			<if test="couponType != null">
				coupon_type = #{couponType,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				`status` = #{status,jdbcType=INTEGER},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=DATE},
			</if>
			<if test="overdueTime != null">
				overdue_time = #{overdueTime,jdbcType=DATE},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="couponName != null">
				coupon_name = #{couponName,jdbcType=VARCHAR},
			</if>
			<if test="couponAmount != null">
				coupon_amount = #{couponAmount,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lxtx.model.CloudCoupon">
		update cloud_coupon
		set `uid` = #{uid,jdbcType=INTEGER},
		coupon_type = #{couponType,jdbcType=INTEGER},
		`status` = #{status,jdbcType=INTEGER},
		add_time = #{addTime,jdbcType=DATE},
		overdue_time = #{overdueTime,jdbcType=DATE},
		order_id = #{orderId,jdbcType=INTEGER},
		coupon_name = #{couponName,jdbcType=VARCHAR},
		coupon_amount = #{couponAmount,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateStatusByDateAndStatus" parameterType="map">
		update cloud_coupon
		set
		`status` = #{overdueStatus,jdbcType=INTEGER}
		where `status` = #{status,jdbcType=INTEGER} and overdue_time =
		#{overdueTime,jdbcType=VARCHAR}
	</update>
</mapper>