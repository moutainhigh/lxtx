<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lxtx.dao.LotteryOrderMapper">
	<resultMap id="BaseResultMap" type="com.lxtx.model.LotteryOrder">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
		<result column="money" property="money" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="settlement_time" property="settlementTime" jdbcType="TIMESTAMP" />
		<result column="settlement_result" property="settlementResult" jdbcType="INTEGER" />
		<result column="direct_date" property="directDate" jdbcType="INTEGER" />
		<result column="direct_sn" property="directSn" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="INTEGER" />
		<result column="announcement" property="announcement" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, `user_id`, order_time, money, state, settlement_time, settlement_result, direct_date, direct_sn, code, announcement
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from lottery_order
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		lottery_order
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.lxtx.model.LotteryOrder"
		useGeneratedKeys="true" keyProperty="id">
		insert into lottery_order (
		`user_id`, order_time, money, direct_date, direct_sn, code
		)
		values (#{userId,jdbcType=INTEGER},
		#{orderTime,jdbcType=TIMESTAMP},
		#{money,jdbcType=INTEGER},
		#{directDate,jdbcType=INTEGER},
		#{directSn,jdbcType=INTEGER},
		#{code,jdbcType=INTEGER}
		)
	</insert>
	<select id="selectOrderByUid" resultType="com.lxtx.model.LotteryOrder"
		parameterType="map">
		select a.id as id,a.user_id as userId,a.order_time as orderTime, a.money ,a.state,a.settlement_time as settlementTime,
		a.settlement_result as settlementResult,a.direct_date as directDate ,a.direct_sn as directSn ,a.code ,b.data_open_code as announcement
		from lottery_order a left join lottery_settlement_history b on a.direct_sn=b.data_sn and a.direct_date=b.data_date
		where a.`user_id` =
		#{uid,jdbcType=INTEGER}
		<if test="id != null and id != 0">
			and a.id &lt; #{id,jdbcType=INTEGER}
		</if>
		order by a.order_time desc limit 10
	</select>	
	<select id="selectByUserIdAndDate" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from lottery_order
		where user_id = #{userId,jdbcType=INTEGER} and direct_date=#{date,jdbcType=INTEGER}
	</select>
	<select id="selectSumOrderMoney" resultType="java.lang.Integer"
		parameterType="map">
		SELECT sum(money)
		from lottery_order
		where direct_date=#{date,jdbcType=INTEGER} and direct_sn=#{sn,jdbcType=INTEGER}
	</select>
	<select id="selectWinOrdersByDateAndSn" resultMap="BaseResultMap"
		parameterType="map">
		SELECT
		<include refid="Base_Column_List" /> 
 		from lottery_order
 		where settlement_result>0
 		and direct_date=#{date,jdbcType=INTEGER}
 		and direct_sn=#{sn,jdbcType=INTEGER}
	</select>
	
</mapper>